{"version":3,"file":"static/js/191.18995b9f.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogitem/Dialogitem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsy\":\"Dialogs_dialogsy__GAG5C\",\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"dialogItem\":\"Dialogs_dialogItem__Gr+yc\",\"message\":\"Dialogs_message__ZEWo0\",\"dialog\":\"Dialogs_dialog__htSTl\",\"offOn\":\"Dialogs_offOn__K0rkJ\",\"textBar\":\"Dialogs_textBar__OdgFx\",\"text\":\"Dialogs_text__6tKID\",\"btn\":\"Dialogs_btn__BVDb-\"};","import React from \"react\";\nimport classes from \"./../Dialogs.module.css\"\n\nconst Messages = (props) => {\n    return(\n        <div className={classes.message}> \n                {props.message} {props.online}\n                \n        </div>)\n}\n\nexport default Messages;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./../Dialogs.module.css\"\n\nconst DialogItem = (props) => {\n    let path =\"/dialogs/\" + props.id;\n    return (\n        <div className={`${classes.dialog} ${classes.active}`}>\n            <div className={classes.dialogItem}>\n                <img src=\"https://www.pngall.com/wp-content/uploads/12/Avatar-PNG-Image.png\" alt=\"\" />\n                <NavLink to = {path}> {props.name} </NavLink>    \n            </div>\n                \n        </div>\n    )\n}\n\nexport default DialogItem;","import React from \"react\";\nimport classes from \"./Dialogs.module.css\"\nimport Messages from \"./Message/Message\";\nimport DialogItem from \"./Dialogitem/Dialogitem\"\nimport { Navigate } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\n\nconst maxLength50 =  maxLengthCreator (50) \n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs\n    .map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} /> );\n\n\n    let messagesElement = state.messages\n        .map( message => <Messages message={message.message} key={message.id} online={message.online}/>);\n        \n    let newMessageBody = state.newMessageBody; \n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageBody);\n    }\n    \n  if (!props.isAuth) return <Navigate to={'/login'}/>;\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsy}>\n            <div className={classes.dialogsItems}>\n                { dialogsElements }\n            </div>\n            <div className={classes.messages}>\n                { messagesElement }\n            </div>\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={classes.textBar}>\n                <Field component={Textarea} \n                        validate={[required, maxLength50]} \n                        name={\"newMessageBody\"} \n                        placeholder={\"Enter your message\"} \n                        className={classes.text} />\n                <button className={classes.btn}>Send</button>\n            </div>\n        </form>  \n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\nexport default Dialogs;","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\n\n            return <Component{...this.props}/>\n        }\n    }\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    \n    return ConnectedAuthRedirectComponent;\n}","import Dialogs from \"./Dialogs\";\nimport {sendMessageCreator} from '../../redux/dialogs-reducer'\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) =>{\n    return {\n        dialogsPage: state.dialogsReducer,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) =>{\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        },\n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"names":["props","_jsxs","className","classes","children","message","online","path","id","_jsx","concat","src","alt","NavLink","to","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","dialog","DialogItem","messagesElement","messages","Messages","newMessageBody","isAuth","values","addMessage","Navigate","mapStateToPropsForRedirect","auth","compose","connect","dialogsReducer","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React","Dialogs"],"sourceRoot":""}